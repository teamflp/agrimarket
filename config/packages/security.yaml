security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false


        # Firewall principal
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AuthControllerAuthenticator

            # On passe le firewall en stateless => pas de session
            stateless: true

            # On retire (ou commente) remember_me, qui nécessite la session
            # remember_me:
            #     secret: '%kernel.secret%'
            #     lifetime: 604800
            #     path: /
            #     # always_remember_me: true

            # Si vous n'avez plus de session, le logout par route n'est plus
            # vraiment utile non plus (on retire ou commente)
            # logout:
            #    path: app_logout

    # Contrôle d’accès
    access_control:
    # Vous pouvez restreindre l’accès à certaines routes
    # - { path: ^/admin, roles: ROLE_ADMIN }
      - { path: '^/api/users', roles: 'IS_AUTHENTICATED_ANONYMOUSLY' }
    # - { path: ^/profile, roles: ROLE_USER }
    # - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Baisse la complexité pour les tests
                time_cost: 3
                memory_cost: 10
